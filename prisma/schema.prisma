// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Category {
    id            Int        @id @default(autoincrement())
    title         String
    slug          String     @unique
    image         String?
    parentId      Int?
    parent        Category?  @relation("parentSubCategories", fields: [parentId], references: [id])
    subCategories Category[] @relation("parentSubCategories")
    products      Product[]
}

model Product {
    id              Int               @id @default(autoincrement())
    name            String
    description     String
    price           Int
    image           String[]
    categoryId      Int
    category        Category          @relation(fields: [categoryId], references: [id], onDelete: Restrict)
    ProductProperty ProductProperty[]
}

model ProductProperty {
    id            Int                  @id @default(autoincrement())
    productId     Int
    product       Product              @relation(fields: [productId], references: [id], onDelete: Cascade)
    PropertyField PropertyField[]
    titleId       Int
    title         ProductPropertyTitle @relation(fields: [titleId], references: [id])
}

model ProductPropertyTitle {
    id              Int               @id @default(autoincrement())
    title           String
    ProductProperty ProductProperty[]
}

model PropertyField {
    id                Int                @id @default(autoincrement())
    aboutId           Int
    about             PropertyFieldAbout @relation(fields: [aboutId], references: [id])
    ProductPropertyId Int
    ProductProperty   ProductProperty    @relation(fields: [ProductPropertyId], references: [id], onDelete: Cascade)
    FieldValueId      Int
    value             FieldValue         @relation(fields: [FieldValueId], references: [id])
}

model PropertyFieldAbout {
    id Int @id @default(autoincrement())

    title         String
    description   String
    slug          String          @unique
    PropertyField PropertyField[]
}

model FieldValue {
    id Int @id @default(autoincrement())

    value String

    PropertyField PropertyField[]
}

//User  

enum Role {
    ADMIN
    USER
}

model User {
    id        Int      @id @default(autoincrement())
    email     String   @unique
    password  String
    name      String
    phone     String
    address   String?
    role      Role     @default(USER)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
