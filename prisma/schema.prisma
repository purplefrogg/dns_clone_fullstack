// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Category {
    id            Int        @id @default(autoincrement())
    title         String
    slug          String     @unique
    image         String?
    parentId      Int?
    parent        Category?  @relation("parentSubCategories", fields: [parentId], references: [id])
    subCategories Category[] @relation("parentSubCategories")
    products      Product[]
    properties    Property[]
}

model Product {
    id          Int          @id @default(autoincrement())
    name        String
    description String
    price       Int
    image       String[]
    categoryId  Int
    category    Category     @relation(fields: [categoryId], references: [id], onDelete: Restrict)
    FieldValue  FieldValue[]
}

model Property {
    id         Int           @id @default(autoincrement())
    field      Field[]
    titleId    Int
    title      PropertyTitle @relation(fields: [titleId], references: [id])
    category   Category?     @relation(fields: [categoryId], references: [id])
    categoryId Int?
}

model PropertyTitle {
    id       Int        @id @default(autoincrement())
    title    String
    property Property[]
}

model Field {
    id         Int          @id @default(autoincrement())
    aboutId    Int
    about      FieldAbout   @relation(fields: [aboutId], references: [id])
    propertyId Int
    property   Property     @relation(fields: [propertyId], references: [id], onDelete: Cascade)
    FieldValue FieldValue[]
}

model FieldAbout {
    id Int @id @default(autoincrement())

    title         String
    description   String
    slug          String  @unique
    PropertyField Field[]
}

model FieldValue {
    id      Int       @id @default(autoincrement())
    value   String
    Product Product[]
    fieldId Int
    field   Field     @relation(fields: [fieldId], references: [id], onDelete: Cascade)
}

//User  

enum Role {
    ADMIN
    USER
}

model User {
    id        Int      @id @default(autoincrement())
    email     String   @unique
    password  String
    name      String
    phone     String
    address   String?
    role      Role     @default(USER)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
